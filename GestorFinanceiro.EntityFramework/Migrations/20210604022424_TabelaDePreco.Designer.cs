// <auto-generated />
using System;
using GestorFinanceiro.EntityFramework.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GestorFinanceiro.EntityFramework.Migrations
{
    [DbContext(typeof(GestorFinanceiroContext))]
    [Migration("20210604022424_TabelaDePreco")]
    partial class TabelaDePreco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Eliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Salario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Lancamento");
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Celular")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Email")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.TabelaPreco", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("LancamentoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("LancamentoId");

                    b.ToTable("TabelaPreco");
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Cliente", b =>
                {
                    b.HasOne("GestorFinanceiro.Domain.Models.Pessoa", "Pessoa")
                        .WithMany("Clientes")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Funcionario", b =>
                {
                    b.HasOne("GestorFinanceiro.Domain.Models.Pessoa", "Pessoa")
                        .WithMany("Funcionarios")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Lancamento", b =>
                {
                    b.HasOne("GestorFinanceiro.Domain.Models.Usuario", "Usuario")
                        .WithMany("Lancamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.TabelaPreco", b =>
                {
                    b.HasOne("GestorFinanceiro.Domain.Models.Lancamento", "Lancamento")
                        .WithMany("TabelasPrecos")
                        .HasForeignKey("LancamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorFinanceiro.Domain.Models.Usuario", b =>
                {
                    b.HasOne("GestorFinanceiro.Domain.Models.Funcionario", "Funcionario")
                        .WithMany("Usuarios")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
